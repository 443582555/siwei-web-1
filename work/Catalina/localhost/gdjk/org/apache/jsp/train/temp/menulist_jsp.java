/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.75
 * Generated at: 2019-03-07 09:18:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.train.temp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menulist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"easyui-layout\" data-options=\"fit:true\">  \r\n");
      out.write("        <table id=\"menu-dg\" style=\"width:100%;height:500px\"></table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        $('#menu-dg').treegrid({\r\n");
      out.write("\t\t    url:'sys/menuList.do',\r\n");
      out.write("\t\t    idField:'id',\r\n");
      out.write("\t\t    treeField:'menu_name',\r\n");
      out.write("            animate: true,\r\n");
      out.write("\t\t    columns:[[\r\n");
      out.write("\t\t   \t\t{field:'menu_name',title:'菜单名称',align:'left',width:'25%'},\r\n");
      out.write("\t\t        {field:'menu_url',title:'菜单地址',align:'left',width:'25%'},\r\n");
      out.write("\t\t        {field:'description',title:'描述',align:'left',width:'25%'},\r\n");
      out.write("\t\t        {field:'icon',title:'菜单图标',align:'left',width:'25%'}\r\n");
      out.write("\t\t    ]],\r\n");
      out.write("\t\t    loadFilter: function(data){\r\n");
      out.write("\t\t    \tresult = getChild(data.rows, 0);\r\n");
      out.write("\t\t\t\treturn result;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction getChild(data, parentId){\r\n");
      out.write("\t\t\tvar arr = [];\r\n");
      out.write("\t\t\tfor( var i = 0, l = data.length; i < l; i++ ){\r\n");
      out.write("\t\t\t\tvar item = data[i];\r\n");
      out.write("\t    \t\tif(parentId == item.parent_tr_id){\r\n");
      out.write("\t    \t\t\tvar obj = {};\r\n");
      out.write("\t    \t\t\tobj.id = item.tm_id;\r\n");
      out.write("\t    \t\t\tobj.menu_url = item.menu_url;\r\n");
      out.write("\t    \t\t\tobj.menu_name = item.menu_name;\r\n");
      out.write("\t    \t\t\tobj.description = item.description;\r\n");
      out.write("\t    \t\t\tobj.icon = item.icon;\r\n");
      out.write("\t    \t\t\tobj.children = getChild(data, item.tm_id);\r\n");
      out.write("\t    \t\t\tarr.push(obj);\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    \treturn arr;\r\n");
      out.write("\t\t}\r\n");
      out.write("    </script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
