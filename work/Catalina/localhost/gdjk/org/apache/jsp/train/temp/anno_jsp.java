/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.75
 * Generated at: 2019-03-07 00:19:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.train.temp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class anno_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("\t<meta http-equiv=\"Content-Language\" content=\"UTF-8\">\r\n");
      out.write("\t<title>轨道测控技术应用系统</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"annoWrap\">\r\n");
      out.write("\t\t<h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("公告</h2>\r\n");
      out.write("\t\t<div id=\"annoContent\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){ \r\n");
      out.write("\t\t\tvar data=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${anno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";\r\n");
      out.write("\t\t\tvar str=\"<table class='anno'>\";\r\n");
      out.write("\t\t\tstr+=\"<tr>\";\r\n");
      out.write("\t\t\tstr+=\"<th  style='width: 12%'>类型名称</th>\";\r\n");
      out.write("\t\t\tstr+=\"<th style='width: 12%'>检测仪序列号</th>\";\r\n");
      out.write("\t\t\tstr+=\"<th>公告内容</th>\";\r\n");
      out.write("\t/* \t\tstr+=\"<th style='width: 10%'>计算值</th>\"; */\r\n");
      out.write("\t\t\tstr+=\"<th style='width: 15%'>时间</th>\";\r\n");
      out.write("\t\t\tstr+=\"</tr>\";\r\n");
      out.write("\t\t\tfor(var i=0,l=data.length;i<l;i++){\r\n");
      out.write("\t\t\t\tstr+=\"<tr data-item-id=\"+data[i].out_id+\">\";\r\n");
      out.write("\t\t\t\tstr+=\"<td class='anno-col2'>【\"+data[i].type_name+\"】</td>\";\r\n");
      out.write("\t\t\t\tstr+=\"<td class='anno-col2'>\"+data[i].object+\"</td>\";\r\n");
      out.write("\t\t\t\tstr+=\"<td class='anno-col3'>\"+data[i].content+\"</td>\";\r\n");
      out.write("/* \t\t\t\tstr+=\"<td class='anno-col4'>\"+data[i].jsz+\"</td>\"; */\r\n");
      out.write("\t\t\t\tstr+=\"<td class='anno-col5'>\"+data[i].insert_time+\"</td>\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tstr+=\"</tr>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tstr+=\"</table>\";\r\n");
      out.write("\t\t\t$(\"#annoContent\").html(str);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#annoContent\").on(\"click\",\"tr\",function(){\r\n");
      out.write("\t\t\t\tvar itemId = $(this).data(\"item-id\");\r\n");
      out.write("\t\t\t\taddTab(\"设备作业信息\",'");
      out.print(request.getContextPath());
      out.write("/train/sbzyxx.do?id='+itemId,\"\");\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
