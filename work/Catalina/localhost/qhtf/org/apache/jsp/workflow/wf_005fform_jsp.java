/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.75
 * Generated at: 2017-03-24 05:45:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.workflow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.aegon_cnooc.util.StringUtil;
import com.aegon_cnooc.oa.ibatis.to.TuOafUsersTO;
import com.aegon_cnooc.oa.constants.Constants;
import com.aegon_cnooc.framework.db.ConnectionPool;
import com.aegon_cnooc.oa.workflow.WFEngine;
import java.sql.Connection;
import com.aegon_cnooc.oa.ibatis.to.TuOafWfiProcTO;

public final class wf_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=gbk");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

//+v2.0 add 2012-07-26 by huzhongchi BUG_NO:6809  start 
session.removeAttribute("0");		//用户选择完附件但是放弃任务提交 当defect、用户需求、datapatch流程进入上线时会导致附件混乱
//+v2.0 add 2012-07-26 by huzhongchi BUG_NO:6809  end 
String path = request.getContextPath();
String wfid = (String)request.getAttribute("wfid");
String type = (String)request.getAttribute("type");
String nodeid = (String)request.getAttribute("nodeid");
String taskid = (String)request.getAttribute("taskid");
String flag = (String)request.getAttribute("flag");
String user_id = (String)request.getAttribute("user_id");

String srno = (String)request.getAttribute("srno");
String srid = (String)request.getAttribute("srid");
String sys  = (String)request.getAttribute("sys");
String back_flag = (String)request.getAttribute("back_flag");
String from = (String)request.getAttribute("from");
TuOafUsersTO user = (TuOafUsersTO)session.getAttribute(Constants.GLOBAL_SESSION_USER);
if(StringUtil.isEmpty(user_id)){
	user_id = user.getUser_id();
}

ConnectionPool connectionPool = ConnectionPool.getInstance();
WFEngine engine = new WFEngine();
Connection conn = connectionPool.getConnection();
Map map = engine.getProcessInfo(taskid,conn);
TuOafWfiProcTO proc = (TuOafWfiProcTO)map.get("proc");
ConnectionPool.closeDB(conn);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<title>");
      if (_jspx_meth_bean_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("</title>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("   \r\n");
      out.write("  ");
//从邮件过来的链接，才需要判断,且不等于CC的
  if(!"CC".equals(flag)){
  //-v2.0 add by liuxinghui 20120522 start
  //去掉了
  //if("email".equals(from)&&type.equals("process")&&(!user.getUser_id().equals(user_id)||!user.getUser_id().equals(proc.getUserid()))){
  //-v2.0 add by liuxinghui 20120522 end
  //+v2.0 add by liuxinghui 20120522 start
  //添加了
  if(type.equals("process")&&(!user.getUser_id().equals(user_id)||!user.getUser_id().equals(proc.getUserid()))){
   //-v2.0 add by liuxinghui 20120522 end
  
      out.write("\r\n");
      out.write("  alert(\"对不起，您不是当前处理者\");\r\n");
      out.write("  window.location = \"");
      out.print(path);
      out.write("/frontend/main.jsp\";\r\n");
      out.write("  ");
}
  if(nodeid!=null&&!nodeid.equals(proc.getNodeid())){
  
      out.write("\r\n");
      out.write("  alert(\"对不起，当前处理节点已处理完\");\r\n");
      out.write("  window.location = \"");
      out.print(path);
      out.write("/frontend/main.jsp\";\r\n");
      out.write("  ");
}
  }
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<frameset rows=\"112,*\" cols=\"*\" framespacing=\"0\" frameborder=\"no\" border=\"0\">\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/workflow/processTopOnload.do?wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(StringUtil.getNulToBlank(taskid) );
      out.write("&nodeid=");
      out.print(StringUtil.getNulToBlank(nodeid) );
      out.write("&flag=");
      out.print(flag );
      out.write("\" name=\"topFrame\" scrolling=\"No\" noresize=\"noresize\" id=\"topFrame\" title=\"topFrame\"/>\r\n");
      out.write("  <!--这里根据wfid以及以及nodeid动态判断要获得哪个FORM进行录入-->\r\n");
      out.write("  ");
if("153".equals(wfid)){
    if("1617".equals(nodeid)||
       "1618".equals(nodeid)||
       "1619".equals(nodeid)||
       "1620".equals(nodeid)||
       "1621".equals(nodeid)||
       "1622".equals(nodeid)||
       "1623".equals(nodeid)||
       "1624".equals(nodeid)||
       "1625".equals(nodeid)||
       "1626".equals(nodeid)||
       "1627".equals(nodeid)||
       "1628".equals(nodeid)||
       "1631".equals(nodeid)||
       "2282".equals(nodeid)||
       "1629".equals(nodeid)||
       "2267".equals(nodeid)||
       "1552".equals(nodeid)){
      out.write("\r\n");
      out.write("   <frame src=\"");
      out.print(path );
      out.write("/sr/initSrApplication.do?nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&back_flag=");
      out.print(StringUtil.getNulToBlank(back_flag) );
      out.write("&flag=");
      out.print(flag);
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />    \r\n");
      out.write("  ");
}else{ 
      out.write("\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/sr/editSROnload.do?nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&flag=");
      out.print(flag);
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
} }
      out.write("\r\n");
      out.write("  ");
if("901".equals(wfid)){
      out.write("\r\n");
      out.write("  ");
 
  	if("101277".equals(nodeid)||
  	   "101278".equals(nodeid)||
  	   "101279".equals(nodeid)||
  	   "101280".equals(nodeid)||
  	   "101281".equals(nodeid)||
  	   "101282".equals(nodeid)||
  	   "101283".equals(nodeid)||
  	   "101284".equals(nodeid)||
  	   "101285".equals(nodeid)||
  	   "101286".equals(nodeid)||
  	   "101287".equals(nodeid)||
  	   "101288".equals(nodeid)||
  	   "101402".equals(nodeid)||
  	   "101494".equals(nodeid)||
  	   "101495".equals(nodeid)||
  	   "902008".equals(nodeid)){
  
      out.write("<frame src=\"");
      out.print(path );
      out.write("/bug/initBugApplication.do?nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&back_flag=");
      out.print(StringUtil.getNulToBlank(back_flag) );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\t\r\n");
      out.write("  ");
}else{ 
      out.write("\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/bug/bugEdit.do?nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&flag=");
      out.print(flag );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
}} 
      out.write("\r\n");
      out.write("  ");
if("902".equals(wfid)){
      out.write("\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/bug/bugEdit.do?nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&srno=");
      out.print(srno );
      out.write("&srid=");
      out.print(srid );
      out.write("&sys=");
      out.print(sys );
      out.write("&flag=");
      out.print(flag );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("  ");
if("145".equals(wfid)){
      out.write("\r\n");
      out.write("   <frame src=\"");
      out.print(path );
      out.write("/application/initApplication.do?rsid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rsid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&flag=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${flag }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&back_flag=");
      out.print(StringUtil.getNulToBlank(back_flag) );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
 }
      out.write("\r\n");
      out.write("  ");
if("159".equals(wfid)){
      out.write("\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/datapatch/initDatapatchMain.do?rsid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rsid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&flag=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${flag }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&back_flag=");
      out.print(StringUtil.getNulToBlank(back_flag) );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("  ");
if("500".equals(wfid)){
      out.write("\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/uli/initUli.do?rsid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rsid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&flag=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${flag }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&back_flag=");
      out.print(StringUtil.getNulToBlank(back_flag) );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("  ");
if("501".equals(wfid)){
      out.write("\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/subversionupd/initSvnUpdate.do?rsid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rsid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&flag=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${flag }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&back_flag=");
      out.print(StringUtil.getNulToBlank(back_flag) );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("  ");
if("502".equals(wfid)){
      out.write("\r\n");
      out.write("  <frame src=\"");
      out.print(path );
      out.write("/wlc/initWorkLoadWlc.do?rsid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rsid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&flag=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${flag }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("&nodeid=");
      out.print(nodeid );
      out.write("&wfid=");
      out.print(wfid );
      out.write("&type=");
      out.print(type );
      out.write("&taskid=");
      out.print(taskid );
      out.write("&back_flag=");
      out.print(StringUtil.getNulToBlank(back_flag) );
      out.write("\" name=\"bottomFrame\" id=\"bottomFrame\" marginwidth=\"0\" marginheight=\"0\" id=\"bottomFrame\" title=\"bottomFrame\" />\r\n");
      out.write("  ");
} 
      out.write("\r\n");
      out.write("</frameset><noframes></noframes>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_bean_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bean:message
    org.apache.struts.taglib.bean.MessageTag _jspx_th_bean_005fmessage_005f0 = (org.apache.struts.taglib.bean.MessageTag) _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.get(org.apache.struts.taglib.bean.MessageTag.class);
    boolean _jspx_th_bean_005fmessage_005f0_reused = false;
    try {
      _jspx_th_bean_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_bean_005fmessage_005f0.setParent(null);
      // /workflow/wf_form.jsp(41,7) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_bean_005fmessage_005f0.setKey("OA_AEGONCNOOC.TITLE");
      int _jspx_eval_bean_005fmessage_005f0 = _jspx_th_bean_005fmessage_005f0.doStartTag();
      if (_jspx_th_bean_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fbean_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_bean_005fmessage_005f0);
      _jspx_th_bean_005fmessage_005f0_reused = true;
    } finally {
      if (!_jspx_th_bean_005fmessage_005f0_reused) {
        _jspx_th_bean_005fmessage_005f0.release();
        _jsp_getInstanceManager().destroyInstance(_jspx_th_bean_005fmessage_005f0);
      }
    }
    return false;
  }
}
